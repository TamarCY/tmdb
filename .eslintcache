[{"C:\\Users\\Tamar\\Desktop\\קורס\\Ex\\tmdb\\tmdb-app\\src\\index.js":"1","C:\\Users\\Tamar\\Desktop\\קורס\\Ex\\tmdb\\tmdb-app\\src\\App.js":"2","C:\\Users\\Tamar\\Desktop\\קורס\\Ex\\tmdb\\tmdb-app\\src\\reportWebVitals.js":"3","C:\\Users\\Tamar\\Desktop\\קורס\\Ex\\tmdb\\tmdb-app\\src\\models\\Actor.js":"4","C:\\Users\\Tamar\\Desktop\\קורס\\Ex\\tmdb\\tmdb-app\\src\\components\\ActorsView.js":"5","C:\\Users\\Tamar\\Desktop\\קורס\\Ex\\tmdb\\tmdb-app\\src\\components\\ActorCard.js":"6"},{"size":500,"mtime":499162500000,"results":"7","hashOfConfig":"8"},{"size":804,"mtime":1611170735412,"results":"9","hashOfConfig":"8"},{"size":362,"mtime":499162500000,"results":"10","hashOfConfig":"8"},{"size":425,"mtime":1611171784334,"results":"11","hashOfConfig":"8"},{"size":2267,"mtime":1611171193624,"results":"12","hashOfConfig":"8"},{"size":882,"mtime":1611171284027,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},"degphm",{"filePath":"17","messages":"18","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"19","messages":"20","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"16"},{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"23","messages":"24","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"25","usedDeprecatedRules":"16"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"28","usedDeprecatedRules":"16"},"C:\\Users\\Tamar\\Desktop\\קורס\\Ex\\tmdb\\tmdb-app\\src\\index.js",[],["29","30"],"C:\\Users\\Tamar\\Desktop\\קורס\\Ex\\tmdb\\tmdb-app\\src\\App.js",[],"C:\\Users\\Tamar\\Desktop\\קורס\\Ex\\tmdb\\tmdb-app\\src\\reportWebVitals.js",[],"C:\\Users\\Tamar\\Desktop\\קורס\\Ex\\tmdb\\tmdb-app\\src\\models\\Actor.js",[],"C:\\Users\\Tamar\\Desktop\\קורס\\Ex\\tmdb\\tmdb-app\\src\\components\\ActorsView.js",["31","32","33","34","35"],"import React from 'react';\r\nimport Actor from '../models/Actor';\r\nimport ActorCard from './ActorCard';\r\nimport CardDeck from 'react-bootstrap/Card';\r\nimport FormFile from 'react-bootstrap/FormFile'\r\nimport InputGroup from 'react-bootstrap/InputGroup'\r\nimport Form from 'react-bootstrap/Form'\r\nimport Button from 'react-bootstrap/Button'\r\n\r\nclass ActorsView extends React.Component{\r\n    constructor(props) {\r\n        super(props);\r\n        this.readText = this.readText.bind(this);\r\n        this.hasLetters = this.hasLetters.bind(this);\r\n        this.cardsToJSX = this.cardsToJSX.bind(this);\r\n\r\n        \r\n      \r\n        this.state ={\r\n            enteredText:\"\",\r\n            cardsArr:[<ActorCard actor={this.props.actors[0]}/>,\r\n                    <ActorCard actor={this.props.actors[1]}/>]\r\n        };\r\n        }\r\n    \r\n        \r\n    \r\n    hasLetters (object){\r\n        if((object.fname.toLowerCase().includes(this.state.enteredText))||\r\n         (object.lname.toLowerCase().includes(this.state.enteredText)))\r\n         {  \r\n            return true\r\n        }\r\n        else return false\r\n        }\r\n         \r\n    cardsToJSX(arr){\r\n        const jsxArr = arr.map((val)=><ActorCard actor={val}/>)\r\n        return jsxArr\r\n\r\n    }\r\n\r\n  \r\n    readText (event){\r\n        const tempFilteredArr = this.props.actors.filter(this.hasLetters)\r\n        console.log(tempFilteredArr)\r\n\r\n\r\n        const filteredArr =  this.cardsToJSX(tempFilteredArr);\r\n\r\n        \r\n       \r\n        this.setState({\r\n            cardsArr: filteredArr\r\n        })\r\n        \r\n        this.setState({\r\n            enteredText: event.target.value.toLowerCase()\r\n        })\r\n\r\n    }\r\n       \r\n\r\n \r\n    render(){\r\n       return ( \r\n           <div>\r\n                 <h1>ActorDB</h1>\r\n                 <div>\r\n                        <label>\r\n                            Filter\r\n                        <input type=\"text\" onChange={this.readText} value={this.state.enteredText}/>\r\n                        </label>\r\n                        \r\n                 </div>\r\n\r\n                <CardDeck style={{display:\"flex\"}}>\r\n                    {this.state.cardsArr}\r\n                </CardDeck>\r\n                \r\n\r\n           </div>\r\n         \r\n       )\r\n   \r\n    }\r\n    }\r\n\r\n\r\nexport default ActorsView;","C:\\Users\\Tamar\\Desktop\\קורס\\Ex\\tmdb\\tmdb-app\\src\\components\\ActorCard.js",["36","37"],"import React from 'react';\r\nimport Card from 'react-bootstrap/Card'\r\nimport Actor from '../models/Actor';\r\n\r\n \r\n\r\nclass ActorCard extends React.Component{\r\n    constructor(props) {\r\n        super(props);\r\n      \r\n    } \r\n    render(){\r\n   \r\n        \r\n\r\n        return ( \r\n           <div>\r\n           \r\n           <Card bg={'dark'} style={{ width: '18rem' }} >\r\n               \r\n            <Card.Img variant=\"top\" src={this.props.actor.imageURL} alt=\"shira hass img\"/> \r\n            \r\n            <Card.Body>\r\n                <div><a href={this.props.actor.imdbLink} target=\"blank\"><Card.Title>{this.props.actor.fname} {this.props.actor.lname}</Card.Title></a></div> \r\n                <Card.Text>{this.props.actor.calcAge()}\r\n                </Card.Text>\r\n            </Card.Body>           \r\n           </Card>\r\n\r\n           </div>\r\n       )\r\n    }\r\n}\r\n\r\nexport default ActorCard;",{"ruleId":"38","replacedBy":"39"},{"ruleId":"40","replacedBy":"41"},{"ruleId":"42","severity":1,"message":"43","line":2,"column":8,"nodeType":"44","messageId":"45","endLine":2,"endColumn":13},{"ruleId":"42","severity":1,"message":"46","line":5,"column":8,"nodeType":"44","messageId":"45","endLine":5,"endColumn":16},{"ruleId":"42","severity":1,"message":"47","line":6,"column":8,"nodeType":"44","messageId":"45","endLine":6,"endColumn":18},{"ruleId":"42","severity":1,"message":"48","line":7,"column":8,"nodeType":"44","messageId":"45","endLine":7,"endColumn":12},{"ruleId":"42","severity":1,"message":"49","line":8,"column":8,"nodeType":"44","messageId":"45","endLine":8,"endColumn":14},{"ruleId":"42","severity":1,"message":"43","line":3,"column":8,"nodeType":"44","messageId":"45","endLine":3,"endColumn":13},{"ruleId":"50","severity":1,"message":"51","line":8,"column":5,"nodeType":"52","messageId":"53","endLine":11,"endColumn":6},"no-native-reassign",["54"],"no-negated-in-lhs",["55"],"no-unused-vars","'Actor' is defined but never used.","Identifier","unusedVar","'FormFile' is defined but never used.","'InputGroup' is defined but never used.","'Form' is defined but never used.","'Button' is defined but never used.","no-useless-constructor","Useless constructor.","MethodDefinition","noUselessConstructor","no-global-assign","no-unsafe-negation"]